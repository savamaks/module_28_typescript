.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}
.body{
  display: flex;
  flex-direction: column;
  gap: 50px;
  align-items: center;
  justify-content: center;
  height: 100%;
}
.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* скрываем все инпуты, чтобы все выглядело красиво */
input
{
  display: none;
}

/* стилизуем стандартный текст лейбела(желательно смотреть этот стиль после .items) */

#text
{
  position: absolute;
  display: block;
  top: 0;
  padding-left: 10px;
}

/* Задаем параметры нашего селекта - ширину, высоту и line-height(для центрирования текста по вертикали;этот парметр меньше ширины на 4px, т.к. в нашем блоке есть border размером в 2px со всех сторон) */

.select
{
  display: inline-block;
  width: 160px;
  height: 34px;
  line-height: 30px;
  position: relative;
}

/* Это наша стрелочка, показывающая, что селект можно раскрыть */

.select:before
{
  content: ">";
  display: inline-block;
  background: white;
  position: absolute;
  right: -5px;
  top: 2px;
  z-index: 2;
  width: 30px;
  height: 26px;
  text-align: center;
  line-height: 26px;
  border: 2px solid #ddd;
  transform: rotate(90deg);
  cursor: pointer;
}

/* Если ничего не выбрано, то наш изначальный текст черного цвета, как и должно быть */

.select input[name="list"]:not(:checked) ~ #text
{
  color: black;
  background: white;
}

/* Если же что-то выбрано, то наш текст становится невидимым и встает сверху выбранного параметра, чтобы при клике на него можно было заного открыть селект, что не было реализовано прошлым автором */

.select input[name="list"]:checked ~ #text
{
  background: transparent;
  color: transparent;
  z-index: 2;
}

/* Стилизация выключенного селекта */

#select:disabled ~ .items #text
{
  background: #eee;
}

/* Стилизация блока с опциями. min-height сделана для фикса высоты при абсолютном позиционировании, overflow же сделан для фиксированной высоты(см. ниже) */

.items
{
  display: block;
  min-height: 30px;
  position: absolute;
  border: 2px solid #ddd;
  overflow: hidden;
  width: 160px;
  cursor: pointer;
}

/* Если наш селект закрыт, то он имеет высоту 30px(сделано для того, чтобы слишком большие надписи не растягивали его в высоту)  */

#select:not(:checked) ~ .items
{
  height: 30px;
}

/* Все лейбелы(названия опций) изначально скрыты */

.items label
{
  border-top: 2px solid #ddd;
  display: none;
  padding-left: 10px;
  background: white;
}

/* Тут много объяснять не надо - просто выделение при наведении */

.items label:hover
{
  background: #eee;
  cursor: pointer;
}

/* Опять же фикс из-за абсолютного позиционирования */

#select:checked ~ .items
{
  padding-top: 30px;
}

/* Если наш селект открыт, то надо сделать все опции видимыми */

#select:checked ~ .items label
{
  display: block;
}

/* Если какая-либо опция была выбрана, то сделать ее видимой(при выборе селект автоматически закроется) */

.items input:checked + label
{
  display: block!important;
  border: none;
  background: white;
}

/* При открытии селекта создать подложку во весь экран, при клике на которую селект закроется, а значение останется пустым. background сделан для наглядности */

#select:checked ~ .bg
{
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 0;
  background: rgba(0,0,0,0.4);
}